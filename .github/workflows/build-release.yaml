name: Release Charts
on:
  push:
    branches:
      # Generally you probably do not want to run this on branches because
      # you'll get a new Helm Chart version commit for every single commit into
      # your branch. It would be very noisy.
      - "!*"
    tags:
      # Trigger this on the tag format that your developers are using for the
      # core application/docker-image tag.
      - v*

permissions:
  packages: write
  contents: write

jobs:
  build-and-test:
    uses: ./.github/workflows/build-and-test.yml
  build-docker:
    uses: ./.github/workflows/build-docker.yml
  bump-and-release:
    needs: [build-and-test, build-docker]
    # depending on default permission settings for your org (contents being read-only or read-write for workloads), you will have to add permissions
    # see: https://docs.github.com/en/actions/security-guides/automatic-token-authentication#modifying-the-permissions-for-the-github_token
    permissions:
      packages: write
      contents: write
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: '0'  # this is important for the git writeback
    - name: Write release version
      run: |
        VERSION=${{ github.ref_name }}
        echo "VERSION=${VERSION:1}" >> $GITHUB_ENV
    - name: Update Helm Chart Values
      uses: Nextdoor/helm-set-image-tag-action@main
      with:
        # A comma-separated list of Values files to update. We default to
        # `chart/values.yaml`, but you can patch multiple values files at once if
        # you need to. There should be only one chart being updated though. To
        # update multiple charts, run this action multiple times.
        #
        values_files: k8s/zobserver/values.yaml
        tag_keys: .image.tag
        tag_value: ${{ env.VERSION }}
        bump_level: patch
        commit_branch: master
    - name: Push Helm chart to OCI compatible registry (Github)
      uses: bsord/helm-push@v4.1.0
      with:
        useOCIRegistry: true
        registry-url:  oci://ghcr.io/${{ github.repository }}
        username: ${{ github.repository_owner }}
        access-token: ${{ secrets.GITHUB_TOKEN }}
        force: false
        chart-folder: k8s/zobserver