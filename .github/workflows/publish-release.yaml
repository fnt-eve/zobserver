name: Create and publish a Docker image and a helm chart

on:
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_OWNER: ${{ github.repository_owner }}

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        # list of Docker images to use as base name for tags
        images: |
          ghcr.io/fnt-eve/zobserver
        # generate Docker tags based on the following events/attributes
        tags: |
          type=raw,value=latest,enable={{is_default_branch}}
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=sha
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to GHCR
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
#          cache-from: type=gha
#          cache-to: type=gha,mode=max
  bump-and-release:
    needs: [ build-and-publish]
    # depending on default permission settings for your org (contents being read-only or read-write for workloads), you will have to add permissions
    # see: https://docs.github.com/en/actions/security-guides/automatic-token-authentication#modifying-the-permissions-for-the-github_token
    permissions:
      packages: write
      contents: write
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: '0'  # this is important for the git writeback
    - name: Write release version
      run: |
        VERSION=${{ github.ref_name }}
        echo "VERSION=${VERSION:1}" >> $GITHUB_ENV
    - name: Update Helm Chart Values
      uses: Nextdoor/helm-set-image-tag-action@main
      with:
        # A comma-separated list of Values files to update. We default to
        # `chart/values.yaml`, but you can patch multiple values files at once if
        # you need to. There should be only one chart being updated though. To
        # update multiple charts, run this action multiple times.
        #
        values_files: k8s/zobserver/values.yaml
        tag_keys: .image.tag
        tag_value: ${{ env.VERSION }}
        bump_level: patch
        commit_branch: master
    - name: Push Helm chart to OCI compatible registry (Github)
      uses: bsord/helm-push@v4.1.0
      with:
        useOCIRegistry: true
        registry-url:  oci://ghcr.io/${{ github.repository }}
        username: ${{ github.repository_owner }}
        access-token: ${{ secrets.GITHUB_TOKEN }}
        force: false
        chart-folder: k8s/zobserver